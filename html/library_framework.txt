Library : 만들어 둔 코드를 가져오는 것
    jQurey : CDN(Contents Delivery Network)으로 활용(jQurey를 다운받아 사용할 수도 있음)
             구글 jQurey가 있음.
             jQuery
            https://developers.google.com/speed/libraries#jquery
            3.x 스니펫:
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
Framework : 만들려는 것의 공통적인 것을 플레임을 만들어 두는 것


User Interface :


Application Programming Interface

document 
document object model : DOM
window object
ajax : webpage를 reload하지 않고 정보를 변경하고  싶다면. 현대적인 웹앱을 만드는데 필수적 technique
cookie : webpage가 reload 되어도 현재상태를 유지하고 싶다면 cookie를 배우세요.
         cookie와 함께라면 사용자를 위한 개인화된 서비스를 제공할 수 있음
offline web application : 
webRTC : 화상통신 웹앱
speech : 사용자의 음성을 인식하고 음성으로 정보를 전달하고 싶다면 speech로 시작하는 api를 검색
webGL : 3차원 그래픽의 게임을 만들고 싶다면 
webVR : 가상현실에 관심이 많다면...


Object Model 객체화란 무엇인가? http://learn.javascript.ru/browser-environment

html문서의 각 tag별로 object를 만들어 준비해둠
그 tag에 해당하는 object를 찾아서 그 객체를 대상으로 method를 호출하거나 객체의 property값을 가져오거나
그 객체를 제어함 그 객체를 가르키는 tag를 제어함.

검사 - console
var imgs = document.getElementsByTagName('img'); --> img 태그의 이름을 가지고 있는 모든 elements를
           가지고 와서 imsgs라는 변수에 리턴해줌
           Elements 끝에 s가 붙었으므로 복수의 태그 목록을 가지고 있다는 것을 알수 있음
           여러개의 값을 리턴하므로 배열의 형태로(type) 리턴됨
            imgs[0]은 img 태그에 해당하는 객체임
            imgs[0].style.width = '300px'; --> 객체의 style이라는 property는 img 태그의 
            css값을 의미함.

window.alert('Hello world'); --> window라는 객체의 미리 준비되어진 method alert를 이용하여 경고장을
브라우저에 보여주게 됨.

window는  전역객체, window, frame 재어를 위한 객체
window.document = document와 동일하게 #document를 리턴함 <body>, <img> 등 document object model
BOM : 현재 웹브라우저의 url이나 페이지 리로드, 경고창을 보여주기도 함. navigator, screen, location, frames, history
JavaScript Core : Object,, Array, function, Date
